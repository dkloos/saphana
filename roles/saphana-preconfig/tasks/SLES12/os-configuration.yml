---
- name: " Stage 2.2 -   Check / set hostname"
  hostname:
    name: "{{ item.key }}"
  with_dict: "{{ host }}"

- name: " Stage 2.2 -   Setting correct hostname in /etc/hosts"
  lineinfile:
    path: /etc/hosts
    regexp: "{{ item.key }}"
    line: "{{ item.value.interface.eth0.ip }}  {{ item.key }}.{{ item.value.domain }}  {{ item.key }}"
  with_dict: "{{ host }}"

- name: " Stage 2.2 -   Setting DNS config"
  lineinfile:
    path: /etc/resolv.conf
    line: "nameserver {{ item }}"
  with_items: "{{ nameserver }}"

- name: " Stage 2.2 -  Remove DVD repo"
  zypper_repository:
    state: absent
    name: 'SLE-12-SP3-SAP-12.3-0'

########################
# FIXME:  Suse registration
##########################
- name: check regitered status
  shell: SUSEConnect -s
  register: regstatus
#  when: not ( (registration.regcode is undefined) or (registration.regcode is undefined is none) or (registration.regcode is undefined | trim == '') or (registration.email is undefined) or (registration.email is undefined is none) or (registration.email is undefined | trim == '') )
  changed_when: false

- name: " Stage 2.2 -   Register system"
  shell: "SUSEConnect -r {{ item.value.registration.regcode }} -e {{ item.value.registration.email }}"
  with_dict: "{{ host }}"
  when: ("Not Registered" in regstatus.stdout)


- name: " Stage 2.2 -   Refresh all repos"
  zypper_repository:
    repo: '*'
    runrefresh: yes

- name: " Stage 2.2 -  Update installed packags"
  zypper:
    state: latest
    name: '*'

#FIXME: Ensure that system reboots if new kernel are downlaoded here.
#- shell: if [ $(zypper if kernel-default |grep Version |cut -d':' -f2|cut -d'-' -f1|tr -d ' ') > $(uname -r |cut -d'-' -f1) ];then echo "reboot"; fi
#  changed_when: false
#  register: compair_kernel
  
#- name: " Stage 2.2 -  Restart system to reboot to newest kernel"
#  shell: "sleep 5 && /sbin/shutdown -r now"
#  async: 1
#  poll: 0
#  when: (compair_kernel.stdout == "reboot")

#- name: " Stage 2.2 -  Wait for system to become reachable again"
#  wait_for_connection:
#    delay: 60
#    timeout: 300
#  when: (compair_kernel.stdout == "reboot")

- name: " Stage 2.2 -  Install required packages"
  zypper:
    state: latest
    name: "{{ packages }}"

- name: " Stage 2.2 -   Setting NTP server"
  block:
   - lineinfile:
       path: /etc/ntp.conf
       line: "server {{ ntpserver.ip }}"
     notify: restart ntp
   - timezone:
       name: "{{ ntpserver.timezone }}"
  when: not( (ntpserver is undefined) or (ntpserver is none) or (ntpserver | trim == '') )


### TODO: Configure Firewall according to instance number instead of disabling
- name: " Stage 2.2 -  Configure Services"
  service: 
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    enabled: "{{ item.enabled }}"
  with_items:
    - { name: 'SuSEfirewall2', state: 'stopped', enabled: 'no' }
    - { name: 'kdump', state: 'stopped', enabled: 'no' }
    - { name: 'uuidd', state: 'started', enabled: 'yes' }
    - { name: 'tuned', state: 'started', enabled: 'yes' }
    - { name: 'ntpd', state: 'started', enabled: 'yes' }
